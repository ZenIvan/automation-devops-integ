# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Sample Workflow for post merge on a specific branch

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Checkout zenrooms-qa-automation repo
      uses: actions/checkout@v2
      with:
        repository: zenrooms/zenrooms-qa-automation
        token: ${{ secrets.ZEN_PAT }}

    - name: Linux OS cache
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: macOS cache
      uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Windows OS cache
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v2
      id: get-cache
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies if not cached
      if: steps.get-cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: install cached dependencies
      if: steps.get-cache.outputs.cache-hit != 'false'
      run: pip install -r requirements.txt

    - name: Test seleniumbase test file using pytest command
      run: |
        cd $GITHUB_WORKSPACE/smoke_tests/
        pytest pricing_smoke_tests.py --env=staging --alluredir=../allure_results

    - name: Allure reports
      uses: afiore/action-allure-report@v0.1.0
      with:
        results-dir: allure_results
        report-dir: allure_results

    - name: Docker run for allure reports
      run: |
        cd allure_results
        docker build . -t allure-gen
        docker run -v ${PWD}:/github/workspace allure-gen allure-results allure-report

#    - uses: testspace-com/setup-testspace@v1
#      with:
#        domain: ${{ github.repository_owner }}
#        token: ${{ secrets.TESTSPACE_TOKEN }}
#    - name: Push result to Testspace server
#      run: |
#        testspace $GITHUB_WORKSPACE/reports/results.xml
#      if: always()